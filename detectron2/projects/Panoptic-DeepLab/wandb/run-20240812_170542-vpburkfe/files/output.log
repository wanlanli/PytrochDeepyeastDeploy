[32m[08/12 17:05:47 d2.engine.defaults]: [39mModel:
PanopticDeepLab(
  (backbone): ResNet(
    (stem): DeepLabStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv2): Conv2d(
        64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv3): Conv2d(
        64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(8, 8), dilation=(8, 8), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): PanopticDeepLabSemSegHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            288, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          512, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            320, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (2): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (3): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(32, 32), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (head): Sequential(
      (0): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (predictor): Conv2d(256, 9, kernel_size=(1, 1), stride=(1, 1))
    (loss): DeepLabCE(
      (criterion): CrossEntropyLoss()
    )
  )
  (ins_embed_head): PanopticDeepLabInsEmbedHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            160, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          512, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): Sequential(
          (0): Conv2d(
            320, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (2): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (3): Conv2d(
              2048, 256, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), bias=False
              (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(32, 32), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (center_head): Sequential(
      (0): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (center_predictor): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
    (offset_head): Sequential(
      (0): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (offset_predictor): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
    (center_loss): MSELoss()
    (offset_loss): L1Loss()
  )
)
[32m[08/12 17:05:47 d2.projects.panoptic_deeplab.dataset_mapper]: [39mAugmentations used in training: [ResizeShortestEdge(short_edge_length=..., max_size=2048, sample_style='choice'), RandomCrop(crop_type='absolute', crop_size=[512, 512]), RandomFlip(), RandomBrightness(intensity_min=0.5, intensity_max=1.5), RandomContrast(intensity_min=0.5, intensity_max=1.5)]
[32m[08/12 17:05:47 d2.data.build]: [39mUsing training sampler TrainingSampler
[32m[08/12 17:05:47 d2.data.common]: [39mSerializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[32m[08/12 17:05:47 d2.data.common]: [39mSerializing 276 elements to byte tensors and concatenating them all ...
[32m[08/12 17:05:47 d2.data.common]: [39mSerialized dataset takes 1.33 MiB
[32m[08/12 17:05:47 d2.data.build]: [39mMaking batched data loader with batch_size=8
[32m[08/12 17:05:47 d2.checkpoint.detection_checkpoint]: [39m[DetectionCheckpointer] Loading from detectron2://DeepLab/R-52.pkl ...
[32m[08/12 17:05:47 fvcore.common.checkpoint]: [39m[Checkpointer] Loading from /home/liwa/.torch/iopath_cache/detectron2/DeepLab/R-52.pkl ...
[32m[08/12 17:05:47 fvcore.common.checkpoint]: [39mReading a file from 'torchvision'
[32m[08/12 17:05:47 d2.checkpoint.c2_model_loading]: [39mFollowing weights matched with submodule backbone - Total num: 55
[31m[5mWARNING[39m[25m [32m[08/12 17:05:47 fvcore.common.checkpoint]: [39mSome model parameters or buffers are not found in the checkpoint:
[34mins_embed_head.center_head.0.norm.{bias, running_mean, running_var, weight}
[34mins_embed_head.center_head.0.weight
[34mins_embed_head.center_head.1.norm.{bias, running_mean, running_var, weight}
[34mins_embed_head.center_head.1.weight
[34mins_embed_head.center_predictor.{bias, weight}
[34mins_embed_head.decoder.res2.fuse_conv.0.norm.{bias, running_mean, running_var, weight}
[34mins_embed_head.decoder.res2.fuse_conv.0.weight
[34mins_embed_head.decoder.res2.fuse_conv.1.norm.{bias, running_mean, running_var, weight}
[34mins_embed_head.decoder.res2.fuse_conv.1.weight
[34mins_embed_head.decoder.res2.project_conv.norm.{bias, running_mean, running_var, weight}
[34mins_embed_head.decoder.res2.project_conv.weight
[34mins_embed_head.decoder.res3.fuse_conv.0.norm.{bias, running_mean, running_var, weight}
[34mins_embed_head.decoder.res3.fuse_conv.0.weight
[34mins_embed_head.decoder.res3.fuse_conv.1.norm.{bias, running_mean, running_var, weight}
[34mins_embed_head.decoder.res3.fuse_conv.1.weight
[34mins_embed_head.decoder.res3.project_conv.norm.{bias, running_mean, running_var, weight}
[34mins_embed_head.decoder.res3.project_conv.weight
[34mins_embed_head.decoder.res5.project_conv.convs.0.norm.{bias, running_mean, running_var, weight}
[34mins_embed_head.decoder.res5.project_conv.convs.0.weight
[34mins_embed_head.decoder.res5.project_conv.convs.1.norm.{bias, running_mean, running_var, weight}
[34mins_embed_head.decoder.res5.project_conv.convs.1.weight
[34mins_embed_head.decoder.res5.project_conv.convs.2.norm.{bias, running_mean, running_var, weight}
[34mins_embed_head.decoder.res5.project_conv.convs.2.weight
[34mins_embed_head.decoder.res5.project_conv.convs.3.norm.{bias, running_mean, running_var, weight}
[34mins_embed_head.decoder.res5.project_conv.convs.3.weight
[34mins_embed_head.decoder.res5.project_conv.convs.4.1.{bias, weight}
[34mins_embed_head.decoder.res5.project_conv.project.norm.{bias, running_mean, running_var, weight}
[34mins_embed_head.decoder.res5.project_conv.project.weight
[34mins_embed_head.offset_head.0.norm.{bias, running_mean, running_var, weight}
[34mins_embed_head.offset_head.0.weight
[34mins_embed_head.offset_head.1.norm.{bias, running_mean, running_var, weight}
[34mins_embed_head.offset_head.1.weight
[34mins_embed_head.offset_predictor.{bias, weight}
[34msem_seg_head.decoder.res2.fuse_conv.0.norm.{bias, running_mean, running_var, weight}
[34msem_seg_head.decoder.res2.fuse_conv.0.weight
[34msem_seg_head.decoder.res2.fuse_conv.1.norm.{bias, running_mean, running_var, weight}
[34msem_seg_head.decoder.res2.fuse_conv.1.weight
[34msem_seg_head.decoder.res2.project_conv.norm.{bias, running_mean, running_var, weight}
[34msem_seg_head.decoder.res2.project_conv.weight
[34msem_seg_head.decoder.res3.fuse_conv.0.norm.{bias, running_mean, running_var, weight}
[34msem_seg_head.decoder.res3.fuse_conv.0.weight
[34msem_seg_head.decoder.res3.fuse_conv.1.norm.{bias, running_mean, running_var, weight}
[34msem_seg_head.decoder.res3.fuse_conv.1.weight
[34msem_seg_head.decoder.res3.project_conv.norm.{bias, running_mean, running_var, weight}
[34msem_seg_head.decoder.res3.project_conv.weight
[34msem_seg_head.decoder.res5.project_conv.convs.0.norm.{bias, running_mean, running_var, weight}
[34msem_seg_head.decoder.res5.project_conv.convs.0.weight
[34msem_seg_head.decoder.res5.project_conv.convs.1.norm.{bias, running_mean, running_var, weight}
[34msem_seg_head.decoder.res5.project_conv.convs.1.weight
[34msem_seg_head.decoder.res5.project_conv.convs.2.norm.{bias, running_mean, running_var, weight}
[34msem_seg_head.decoder.res5.project_conv.convs.2.weight
[34msem_seg_head.decoder.res5.project_conv.convs.3.norm.{bias, running_mean, running_var, weight}
[34msem_seg_head.decoder.res5.project_conv.convs.3.weight
[34msem_seg_head.decoder.res5.project_conv.convs.4.1.{bias, weight}
[34msem_seg_head.decoder.res5.project_conv.project.norm.{bias, running_mean, running_var, weight}
[34msem_seg_head.decoder.res5.project_conv.project.weight
[34msem_seg_head.head.0.norm.{bias, running_mean, running_var, weight}
[34msem_seg_head.head.0.weight
[34msem_seg_head.head.1.norm.{bias, running_mean, running_var, weight}
[34msem_seg_head.head.1.weight
[34msem_seg_head.predictor.{bias, weight}
[31m[5mWARNING[39m[25m [32m[08/12 17:05:47 fvcore.common.checkpoint]: [39mThe checkpoint state_dict contains keys that are not used by the model:
  [35mstem.fc.{bias, weight}
[32m[08/12 17:05:47 d2.engine.train_loop]: [39mStarting training from iteration 0
[32m[08/12 17:06:40 d2.utils.events]: [39m eta: 3 days, 5:09:18  iter: 19  total_loss: 143.7  loss_sem_seg: 22.04  loss_center: 121.4  loss_offset: 0.2764    time: 1.3787  last_time: 1.3304  data_time: 1.4228  last_data_time: 0.1677   lr: 9.9896e-06  max_mem: 8670M
[32m[08/12 17:07:08 d2.utils.events]: [39m eta: 3 days, 5:56:26  iter: 39  total_loss: 146.3  loss_sem_seg: 21.8  loss_center: 124.1  loss_offset: 0.2673    time: 1.3991  last_time: 1.4961  data_time: 0.2142  last_data_time: 0.2308   lr: 1.9977e-05  max_mem: 8670M
[32m[08/12 17:07:37 d2.utils.events]: [39m eta: 3 days, 6:33:04  iter: 59  total_loss: 133.7  loss_sem_seg: 21.37  loss_center: 112  loss_offset: 0.2709    time: 1.4254  last_time: 1.5350  data_time: 0.2372  last_data_time: 0.2429   lr: 2.9963e-05  max_mem: 8671M
[32m[08/12 17:08:06 d2.utils.events]: [39m eta: 3 days, 6:56:09  iter: 79  total_loss: 114.2  loss_sem_seg: 20.65  loss_center: 93.14  loss_offset: 0.2614    time: 1.4320  last_time: 1.3641  data_time: 0.2251  last_data_time: 0.1804   lr: 3.9946e-05  max_mem: 8671M
[32m[08/12 17:08:36 d2.utils.events]: [39m eta: 3 days, 7:02:10  iter: 99  total_loss: 89.24  loss_sem_seg: 19.52  loss_center: 69.62  loss_offset: 0.2712    time: 1.4370  last_time: 1.4255  data_time: 0.2126  last_data_time: 0.1963   lr: 4.9928e-05  max_mem: 8671M
[32m[08/12 17:09:04 d2.utils.events]: [39m eta: 3 days, 6:50:25  iter: 119  total_loss: 71.96  loss_sem_seg: 18.41  loss_center: 53.35  loss_offset: 0.2674    time: 1.4311  last_time: 1.3854  data_time: 0.1929  last_data_time: 0.1972   lr: 5.9908e-05  max_mem: 8671M
[32m[08/12 17:09:33 d2.utils.events]: [39m eta: 3 days, 6:54:44  iter: 139  total_loss: 53.95  loss_sem_seg: 17.26  loss_center: 36.45  loss_offset: 0.256    time: 1.4347  last_time: 1.4165  data_time: 0.2119  last_data_time: 0.1876   lr: 6.9887e-05  max_mem: 8671M
[32m[08/12 17:10:01 d2.utils.events]: [39m eta: 3 days, 7:04:53  iter: 159  total_loss: 40.35  loss_sem_seg: 16.22  loss_center: 23.55  loss_offset: 0.2537    time: 1.4341  last_time: 1.4357  data_time: 0.2016  last_data_time: 0.1938   lr: 7.9863e-05  max_mem: 8671M
[32m[08/12 17:10:30 d2.utils.events]: [39m eta: 3 days, 6:56:28  iter: 179  total_loss: 32.38  loss_sem_seg: 15.4  loss_center: 16.47  loss_offset: 0.2553    time: 1.4320  last_time: 1.4249  data_time: 0.1999  last_data_time: 0.1959   lr: 8.9838e-05  max_mem: 8671M
[32m[08/12 17:10:58 d2.utils.events]: [39m eta: 3 days, 6:56:00  iter: 199  total_loss: 28.65  loss_sem_seg: 14.4  loss_center: 14.32  loss_offset: 0.2442    time: 1.4309  last_time: 1.4388  data_time: 0.1957  last_data_time: 0.1888   lr: 9.9811e-05  max_mem: 8671M
[32m[08/12 17:11:27 d2.utils.events]: [39m eta: 3 days, 7:03:26  iter: 219  total_loss: 25.77  loss_sem_seg: 13.66  loss_center: 12.07  loss_offset: 0.2494    time: 1.4311  last_time: 1.4435  data_time: 0.2084  last_data_time: 0.2240   lr: 0.00010978  max_mem: 8671M
[32m[08/12 17:11:55 d2.utils.events]: [39m eta: 3 days, 7:02:58  iter: 239  total_loss: 22.94  loss_sem_seg: 12.59  loss_center: 10.2  loss_offset: 0.2361    time: 1.4313  last_time: 1.4125  data_time: 0.1961  last_data_time: 0.2045   lr: 0.00011975  max_mem: 8671M
[32m[08/12 17:12:24 d2.utils.events]: [39m eta: 3 days, 7:03:40  iter: 259  total_loss: 22.75  loss_sem_seg: 11.83  loss_center: 10.58  loss_offset: 0.2275    time: 1.4314  last_time: 1.4065  data_time: 0.2105  last_data_time: 0.2055   lr: 0.00012972  max_mem: 8671M
[32m[08/12 17:12:53 d2.utils.events]: [39m eta: 3 days, 7:03:49  iter: 279  total_loss: 20.2  loss_sem_seg: 11.24  loss_center: 9.004  loss_offset: 0.2167    time: 1.4317  last_time: 1.4113  data_time: 0.2080  last_data_time: 0.2013   lr: 0.00013968  max_mem: 8671M
[32m[08/12 17:13:21 d2.utils.events]: [39m eta: 3 days, 6:59:30  iter: 299  total_loss: 19.82  loss_sem_seg: 10.71  loss_center: 9.011  loss_offset: 0.237    time: 1.4308  last_time: 1.4240  data_time: 0.2100  last_data_time: 0.1903   lr: 0.00014965  max_mem: 8671M
[32m[08/12 17:13:50 d2.utils.events]: [39m eta: 3 days, 6:59:01  iter: 319  total_loss: 18.43  loss_sem_seg: 9.665  loss_center: 8.316  loss_offset: 0.2247    time: 1.4310  last_time: 1.4549  data_time: 0.2109  last_data_time: 0.1896   lr: 0.00015961  max_mem: 8671M
[32m[08/12 17:14:18 d2.utils.events]: [39m eta: 3 days, 6:53:53  iter: 339  total_loss: 17.28  loss_sem_seg: 9.309  loss_center: 8.08  loss_offset: 0.1917    time: 1.4301  last_time: 1.3833  data_time: 0.1959  last_data_time: 0.2047   lr: 0.00016957  max_mem: 8671M
[32m[08/12 17:14:47 d2.utils.events]: [39m eta: 3 days, 6:56:24  iter: 359  total_loss: 16.74  loss_sem_seg: 9  loss_center: 7.745  loss_offset: 0.1999    time: 1.4304  last_time: 1.5339  data_time: 0.2172  last_data_time: 0.3709   lr: 0.00017953  max_mem: 8671M
[32m[08/12 17:15:15 d2.utils.events]: [39m eta: 3 days, 6:52:57  iter: 379  total_loss: 15.7  loss_sem_seg: 8.064  loss_center: 7.421  loss_offset: 0.2    time: 1.4301  last_time: 1.3733  data_time: 0.1993  last_data_time: 0.2032   lr: 0.00018949  max_mem: 8671M
[32m[08/12 17:15:44 d2.utils.events]: [39m eta: 3 days, 6:52:28  iter: 399  total_loss: 15.9  loss_sem_seg: 8.454  loss_center: 8.185  loss_offset: 0.1879    time: 1.4300  last_time: 1.4149  data_time: 0.2089  last_data_time: 0.1534   lr: 0.00019944  max_mem: 8671M
[32m[08/12 17:16:13 d2.utils.events]: [39m eta: 3 days, 6:52:00  iter: 419  total_loss: 15.85  loss_sem_seg: 8.286  loss_center: 6.958  loss_offset: 0.1806    time: 1.4306  last_time: 1.4439  data_time: 0.2267  last_data_time: 0.2087   lr: 0.00020939  max_mem: 8671M
[32m[08/12 17:16:41 d2.utils.events]: [39m eta: 3 days, 6:49:54  iter: 439  total_loss: 14.5  loss_sem_seg: 7.524  loss_center: 6.745  loss_offset: 0.1776    time: 1.4305  last_time: 1.4015  data_time: 0.2022  last_data_time: 0.1861   lr: 0.00021935  max_mem: 8671M
[32m[08/12 17:17:12 d2.utils.events]: [39m eta: 3 days, 6:56:42  iter: 459  total_loss: 14.79  loss_sem_seg: 7.979  loss_center: 6.659  loss_offset: 0.1732    time: 1.4343  last_time: 1.5232  data_time: 0.2237  last_data_time: 0.2669   lr: 0.0002293  max_mem: 8671M
[32m[08/12 17:17:42 d2.utils.events]: [39m eta: 3 days, 7:01:13  iter: 479  total_loss: 15.66  loss_sem_seg: 7.832  loss_center: 7.61  loss_offset: 0.1597    time: 1.4370  last_time: 1.5132  data_time: 0.2316  last_data_time: 0.2628   lr: 0.00023924  max_mem: 8671M
[32m[08/12 17:18:12 d2.utils.events]: [39m eta: 3 days, 7:14:49  iter: 499  total_loss: 13.28  loss_sem_seg: 6.666  loss_center: 6.075  loss_offset: 0.1687    time: 1.4394  last_time: 1.4592  data_time: 0.2438  last_data_time: 0.2305   lr: 0.00024919  max_mem: 8671M
[32m[08/12 17:18:51 d2.utils.events]: [39m eta: 3 days, 7:22:31  iter: 519  total_loss: 13.47  loss_sem_seg: 6.847  loss_center: 6.217  loss_offset: 0.1532    time: 1.4600  last_time: 2.6577  data_time: 0.3608  last_data_time: 0.5800   lr: 0.00025913  max_mem: 8671M
[32m[08/12 17:19:46 d2.utils.events]: [39m eta: 3 days, 7:31:38  iter: 539  total_loss: 13.02  loss_sem_seg: 6.586  loss_center: 6.071  loss_offset: 0.1426    time: 1.5066  last_time: 2.7361  data_time: 0.6401  last_data_time: 0.5731   lr: 0.00026908  max_mem: 8671M
[32m[08/12 17:20:34 d2.utils.events]: [39m eta: 3 days, 7:40:50  iter: 559  total_loss: 12.91  loss_sem_seg: 6.453  loss_center: 6.158  loss_offset: 0.142    time: 1.5398  last_time: 2.1728  data_time: 0.5266  last_data_time: 0.3270   lr: 0.00027902  max_mem: 8671M
[32m[08/12 17:21:10 d2.utils.events]: [39m eta: 3 days, 7:47:45  iter: 579  total_loss: 11.83  loss_sem_seg: 5.996  loss_center: 5.887  loss_offset: 0.1387    time: 1.5479  last_time: 1.6329  data_time: 0.3105  last_data_time: 0.1929   lr: 0.00028896  max_mem: 8671M
[32m[08/12 17:21:38 d2.utils.events]: [39m eta: 3 days, 7:47:16  iter: 599  total_loss: 12.2  loss_sem_seg: 5.992  loss_center: 5.878  loss_offset: 0.1229    time: 1.5440  last_time: 1.4783  data_time: 0.2190  last_data_time: 0.1800   lr: 0.00029889  max_mem: 8671M
[32m[08/12 17:22:07 d2.utils.events]: [39m eta: 3 days, 7:40:33  iter: 619  total_loss: 11.02  loss_sem_seg: 5.793  loss_center: 5.225  loss_offset: 0.1215    time: 1.5401  last_time: 1.4161  data_time: 0.2182  last_data_time: 0.1863   lr: 0.00030883  max_mem: 8671M
[32m[08/12 17:22:35 d2.utils.events]: [39m eta: 3 days, 7:37:50  iter: 639  total_loss: 11.47  loss_sem_seg: 5.892  loss_center: 5.332  loss_offset: 0.1161    time: 1.5365  last_time: 1.4123  data_time: 0.2049  last_data_time: 0.1666   lr: 0.00031876  max_mem: 8671M
[32m[08/12 17:23:05 d2.utils.events]: [39m eta: 3 days, 7:38:45  iter: 659  total_loss: 11.18  loss_sem_seg: 5.823  loss_center: 5.279  loss_offset: 0.1216    time: 1.5352  last_time: 1.6673  data_time: 0.2244  last_data_time: 0.3452   lr: 0.00032869  max_mem: 8671M
[32m[08/12 17:23:39 d2.utils.events]: [39m eta: 3 days, 7:46:09  iter: 679  total_loss: 11.25  loss_sem_seg: 5.418  loss_center: 5.44  loss_offset: 0.122    time: 1.5390  last_time: 1.5801  data_time: 0.3076  last_data_time: 0.2477   lr: 0.00033862  max_mem: 8671M
[32m[08/12 17:24:11 d2.utils.events]: [39m eta: 3 days, 7:53:23  iter: 699  total_loss: 12.39  loss_sem_seg: 6.038  loss_center: 5.254  loss_offset: 0.1177    time: 1.5413  last_time: 1.6916  data_time: 0.2761  last_data_time: 0.2566   lr: 0.00034855  max_mem: 8671M
[32m[08/12 17:24:43 d2.utils.events]: [39m eta: 3 days, 7:58:32  iter: 719  total_loss: 10.68  loss_sem_seg: 5.739  loss_center: 5.047  loss_offset: 0.1138    time: 1.5424  last_time: 1.4804  data_time: 0.2785  last_data_time: 0.2462   lr: 0.00035848  max_mem: 8671M
[32m[08/12 17:25:15 d2.utils.events]: [39m eta: 3 days, 8:05:34  iter: 739  total_loss: 11.08  loss_sem_seg: 5.551  loss_center: 5.644  loss_offset: 0.1064    time: 1.5443  last_time: 1.6076  data_time: 0.2752  last_data_time: 0.2244   lr: 0.0003684  max_mem: 8671M
[32m[08/12 17:25:48 d2.utils.events]: [39m eta: 3 days, 8:13:36  iter: 759  total_loss: 11.79  loss_sem_seg: 5.327  loss_center: 5.925  loss_offset: 0.1055    time: 1.5469  last_time: 1.6219  data_time: 0.3056  last_data_time: 0.2493   lr: 0.00037832  max_mem: 8671M
[32m[08/12 17:26:20 d2.utils.events]: [39m eta: 3 days, 8:25:41  iter: 779  total_loss: 14.63  loss_sem_seg: 7.137  loss_center: 7.781  loss_offset: 0.1156    time: 1.5481  last_time: 1.5051  data_time: 0.2715  last_data_time: 0.2533   lr: 0.00038824  max_mem: 8671M
[32m[08/12 17:26:51 d2.utils.events]: [39m eta: 3 days, 8:34:57  iter: 799  total_loss: 13.83  loss_sem_seg: 6.919  loss_center: 6.805  loss_offset: 0.1183    time: 1.5489  last_time: 1.7538  data_time: 0.2841  last_data_time: 0.2542   lr: 0.00039816  max_mem: 8671M
[32m[08/12 17:27:23 d2.utils.events]: [39m eta: 3 days, 8:43:32  iter: 819  total_loss: 12.96  loss_sem_seg: 6.933  loss_center: 5.985  loss_offset: 0.1055    time: 1.5504  last_time: 1.4652  data_time: 0.2968  last_data_time: 0.2574   lr: 0.00040808  max_mem: 8671M
[32m[08/12 17:27:56 d2.utils.events]: [39m eta: 3 days, 8:54:48  iter: 839  total_loss: 11.18  loss_sem_seg: 5.826  loss_center: 5.291  loss_offset: 0.09735    time: 1.5525  last_time: 1.5604  data_time: 0.2807  last_data_time: 0.2358   lr: 0.000418  max_mem: 8671M
[32m[08/12 17:28:28 d2.utils.events]: [39m eta: 3 days, 9:04:19  iter: 859  total_loss: 11.16  loss_sem_seg: 5.573  loss_center: 5.087  loss_offset: 0.09438    time: 1.5531  last_time: 1.6436  data_time: 0.2578  last_data_time: 0.2822   lr: 0.00042791  max_mem: 8671M
[32m[08/12 17:29:01 d2.utils.events]: [39m eta: 3 days, 9:13:31  iter: 879  total_loss: 10.63  loss_sem_seg: 5.84  loss_center: 4.783  loss_offset: 0.08961    time: 1.5555  last_time: 2.0156  data_time: 0.3404  last_data_time: 0.7067   lr: 0.00043782  max_mem: 8671M
[32m[08/12 17:29:34 d2.utils.events]: [39m eta: 3 days, 9:22:26  iter: 899  total_loss: 10.92  loss_sem_seg: 5.486  loss_center: 5.328  loss_offset: 0.09206    time: 1.5579  last_time: 1.5814  data_time: 0.2841  last_data_time: 0.2865   lr: 0.00044773  max_mem: 8671M
[32m[08/12 17:30:06 d2.utils.events]: [39m eta: 3 days, 9:33:51  iter: 919  total_loss: 12.41  loss_sem_seg: 5.802  loss_center: 6.383  loss_offset: 0.09143    time: 1.5584  last_time: 1.4777  data_time: 0.2643  last_data_time: 0.2368   lr: 0.00045764  max_mem: 8671M
[32m[08/12 17:30:38 d2.utils.events]: [39m eta: 3 days, 9:45:04  iter: 939  total_loss: 12.19  loss_sem_seg: 5.982  loss_center: 6.602  loss_offset: 0.09528    time: 1.5597  last_time: 1.6646  data_time: 0.2648  last_data_time: 0.2214   lr: 0.00046755  max_mem: 8671M
[32m[08/12 17:31:11 d2.utils.events]: [39m eta: 3 days, 9:50:23  iter: 959  total_loss: 10.34  loss_sem_seg: 5.41  loss_center: 4.989  loss_offset: 0.08934    time: 1.5611  last_time: 1.7649  data_time: 0.3055  last_data_time: 0.4758   lr: 0.00047745  max_mem: 8671M
[32m[08/12 17:31:43 d2.utils.events]: [39m eta: 3 days, 9:52:40  iter: 979  total_loss: 9.33  loss_sem_seg: 5.129  loss_center: 4.476  loss_offset: 0.08291    time: 1.5622  last_time: 1.5732  data_time: 0.2972  last_data_time: 0.2731   lr: 0.00048735  max_mem: 8671M
[32m[08/12 17:32:15 d2.utils.events]: [39m eta: 3 days, 10:05:21  iter: 999  total_loss: 9.764  loss_sem_seg: 5.111  loss_center: 4.387  loss_offset: 0.08045    time: 1.5629  last_time: 1.5681  data_time: 0.2688  last_data_time: 0.3195   lr: 0.00049725  max_mem: 8671M
[32m[08/12 17:32:48 d2.utils.events]: [39m eta: 3 days, 10:26:36  iter: 1019  total_loss: 9.042  loss_sem_seg: 5.039  loss_center: 3.915  loss_offset: 0.08105    time: 1.5645  last_time: 1.6051  data_time: 0.2901  last_data_time: 0.2583   lr: 0.00049771  max_mem: 8671M
[32m[08/12 17:33:19 d2.utils.events]: [39m eta: 3 days, 10:38:16  iter: 1039  total_loss: 9.573  loss_sem_seg: 4.905  loss_center: 4.627  loss_offset: 0.07648    time: 1.5648  last_time: 1.7907  data_time: 0.2734  last_data_time: 0.4809   lr: 0.00049766  max_mem: 8671M
[32m[08/12 17:33:52 d2.utils.events]: [39m eta: 3 days, 10:50:30  iter: 1059  total_loss: 9.149  loss_sem_seg: 4.814  loss_center: 4.255  loss_offset: 0.0757    time: 1.5657  last_time: 1.7390  data_time: 0.2779  last_data_time: 0.3233   lr: 0.00049762  max_mem: 8671M
[32m[08/12 17:34:24 d2.utils.events]: [39m eta: 3 days, 11:05:59  iter: 1079  total_loss: 8.749  loss_sem_seg: 4.468  loss_center: 4.365  loss_offset: 0.07995    time: 1.5663  last_time: 1.6105  data_time: 0.2673  last_data_time: 0.2746   lr: 0.00049757  max_mem: 8671M
[32m[08/12 17:34:57 d2.utils.events]: [39m eta: 3 days, 11:22:22  iter: 1099  total_loss: 8.554  loss_sem_seg: 4.339  loss_center: 4.145  loss_offset: 0.07158    time: 1.5676  last_time: 1.8152  data_time: 0.2967  last_data_time: 0.2330   lr: 0.00049753  max_mem: 8671M
[32m[08/12 17:35:29 d2.utils.events]: [39m eta: 3 days, 11:43:25  iter: 1119  total_loss: 9.118  loss_sem_seg: 4.561  loss_center: 3.993  loss_offset: 0.07258    time: 1.5682  last_time: 1.6009  data_time: 0.2906  last_data_time: 0.2714   lr: 0.00049748  max_mem: 8671M
[32m[08/12 17:36:01 d2.utils.events]: [39m eta: 3 days, 12:04:51  iter: 1139  total_loss: 7.994  loss_sem_seg: 4.179  loss_center: 3.921  loss_offset: 0.07021    time: 1.5691  last_time: 1.6275  data_time: 0.2868  last_data_time: 0.2588   lr: 0.00049744  max_mem: 8671M
[32m[08/12 17:36:34 d2.utils.events]: [39m eta: 3 days, 12:21:54  iter: 1159  total_loss: 9.291  loss_sem_seg: 4.656  loss_center: 4.422  loss_offset: 0.07306    time: 1.5707  last_time: 1.9117  data_time: 0.3288  last_data_time: 0.3266   lr: 0.00049739  max_mem: 8671M
[32m[08/12 17:37:05 d2.utils.events]: [39m eta: 3 days, 12:30:58  iter: 1179  total_loss: 8.923  loss_sem_seg: 4.616  loss_center: 4.193  loss_offset: 0.07545    time: 1.5706  last_time: 1.7511  data_time: 0.2875  last_data_time: 0.3394   lr: 0.00049735  max_mem: 8671M
[32m[08/12 17:37:38 d2.utils.events]: [39m eta: 3 days, 13:01:19  iter: 1199  total_loss: 8.395  loss_sem_seg: 4.466  loss_center: 3.92  loss_offset: 0.06928    time: 1.5716  last_time: 1.4550  data_time: 0.2774  last_data_time: 0.2198   lr: 0.0004973  max_mem: 8671M
[32m[08/12 17:38:11 d2.utils.events]: [39m eta: 3 days, 13:21:38  iter: 1219  total_loss: 8.974  loss_sem_seg: 4.571  loss_center: 4.325  loss_offset: 0.06965    time: 1.5726  last_time: 1.5381  data_time: 0.2741  last_data_time: 0.2713   lr: 0.00049726  max_mem: 8671M
[32m[08/12 17:38:42 d2.utils.events]: [39m eta: 3 days, 13:32:27  iter: 1239  total_loss: 8.155  loss_sem_seg: 4.458  loss_center: 3.759  loss_offset: 0.06572    time: 1.5728  last_time: 1.6831  data_time: 0.2542  last_data_time: 0.2575   lr: 0.00049721  max_mem: 8671M
[32m[08/12 17:39:15 d2.utils.events]: [39m eta: 3 days, 13:50:25  iter: 1259  total_loss: 8.666  loss_sem_seg: 4.796  loss_center: 3.709  loss_offset: 0.06839    time: 1.5735  last_time: 1.6551  data_time: 0.2868  last_data_time: 0.3061   lr: 0.00049717  max_mem: 8671M
[32m[08/12 17:39:47 d2.utils.events]: [39m eta: 3 days, 14:03:54  iter: 1279  total_loss: 8.237  loss_sem_seg: 4.282  loss_center: 4.008  loss_offset: 0.07013    time: 1.5741  last_time: 1.6727  data_time: 0.2667  last_data_time: 0.3021   lr: 0.00049712  max_mem: 8671M
[32m[08/12 17:40:19 d2.utils.events]: [39m eta: 3 days, 14:17:14  iter: 1299  total_loss: 7.866  loss_sem_seg: 4.137  loss_center: 3.643  loss_offset: 0.06282    time: 1.5745  last_time: 1.6059  data_time: 0.2701  last_data_time: 0.2490   lr: 0.00049708  max_mem: 8671M
[32m[08/12 17:40:51 d2.utils.events]: [39m eta: 3 days, 14:33:01  iter: 1319  total_loss: 8.177  loss_sem_seg: 4.086  loss_center: 3.835  loss_offset: 0.06791    time: 1.5748  last_time: 1.5566  data_time: 0.2984  last_data_time: 0.3102   lr: 0.00049703  max_mem: 8671M
[32m[08/12 17:41:24 d2.utils.events]: [39m eta: 3 days, 14:51:47  iter: 1339  total_loss: 7.695  loss_sem_seg: 4.105  loss_center: 3.517  loss_offset: 0.06407    time: 1.5759  last_time: 1.7012  data_time: 0.2788  last_data_time: 0.3318   lr: 0.00049699  max_mem: 8671M
[32m[08/12 17:41:55 d2.utils.events]: [39m eta: 3 days, 14:54:19  iter: 1359  total_loss: 7.206  loss_sem_seg: 3.783  loss_center: 3.221  loss_offset: 0.0641    time: 1.5755  last_time: 1.5153  data_time: 0.2551  last_data_time: 0.2670   lr: 0.00049694  max_mem: 8671M
[32m[08/12 17:42:28 d2.utils.events]: [39m eta: 3 days, 15:03:25  iter: 1379  total_loss: 7.499  loss_sem_seg: 4.191  loss_center: 3.289  loss_offset: 0.06191    time: 1.5764  last_time: 1.5315  data_time: 0.2689  last_data_time: 0.2307   lr: 0.0004969  max_mem: 8671M
[32m[08/12 17:43:00 d2.utils.events]: [39m eta: 3 days, 15:14:12  iter: 1399  total_loss: 7.153  loss_sem_seg: 3.881  loss_center: 3.467  loss_offset: 0.06111    time: 1.5770  last_time: 1.6688  data_time: 0.2944  last_data_time: 0.3493   lr: 0.00049685  max_mem: 8671M
[32m[08/12 17:43:32 d2.utils.events]: [39m eta: 3 days, 15:22:16  iter: 1419  total_loss: 7.424  loss_sem_seg: 4.034  loss_center: 3.11  loss_offset: 0.05749    time: 1.5772  last_time: 1.5872  data_time: 0.2696  last_data_time: 0.2723   lr: 0.00049681  max_mem: 8671M
[32m[08/12 17:44:03 d2.utils.events]: [39m eta: 3 days, 15:31:58  iter: 1439  total_loss: 7.328  loss_sem_seg: 3.967  loss_center: 3.043  loss_offset: 0.05838    time: 1.5772  last_time: 1.6935  data_time: 0.2741  last_data_time: 0.2445   lr: 0.00049676  max_mem: 8671M
[32m[08/12 17:44:35 d2.utils.events]: [39m eta: 3 days, 15:37:47  iter: 1459  total_loss: 7.108  loss_sem_seg: 4.05  loss_center: 3.012  loss_offset: 0.05989    time: 1.5774  last_time: 1.6971  data_time: 0.2851  last_data_time: 0.3292   lr: 0.00049672  max_mem: 8671M
[32m[08/12 17:45:08 d2.utils.events]: [39m eta: 3 days, 15:43:05  iter: 1479  total_loss: 7.02  loss_sem_seg: 3.936  loss_center: 3.139  loss_offset: 0.06243    time: 1.5782  last_time: 1.5900  data_time: 0.2865  last_data_time: 0.3021   lr: 0.00049667  max_mem: 8671M
[32m[08/12 17:45:40 d2.utils.events]: [39m eta: 3 days, 15:51:46  iter: 1499  total_loss: 7.407  loss_sem_seg: 3.93  loss_center: 3.299  loss_offset: 0.06394    time: 1.5781  last_time: 1.5362  data_time: 0.2595  last_data_time: 0.2659   lr: 0.00049663  max_mem: 8671M
[32m[08/12 17:46:12 d2.utils.events]: [39m eta: 3 days, 15:53:23  iter: 1519  total_loss: 7.153  loss_sem_seg: 3.803  loss_center: 3.366  loss_offset: 0.06229    time: 1.5789  last_time: 1.6699  data_time: 0.2918  last_data_time: 0.2633   lr: 0.00049658  max_mem: 8671M
[32m[08/12 17:46:45 d2.utils.events]: [39m eta: 3 days, 15:44:57  iter: 1539  total_loss: 7.323  loss_sem_seg: 4.016  loss_center: 3.251  loss_offset: 0.0581    time: 1.5794  last_time: 1.5040  data_time: 0.2947  last_data_time: 0.2242   lr: 0.00049654  max_mem: 8671M
[32m[08/12 17:47:16 d2.utils.events]: [39m eta: 3 days, 15:36:05  iter: 1559  total_loss: 6.878  loss_sem_seg: 3.836  loss_center: 3.056  loss_offset: 0.05879    time: 1.5794  last_time: 1.5753  data_time: 0.2867  last_data_time: 0.2552   lr: 0.00049649  max_mem: 8671M
[32m[08/12 17:47:48 d2.utils.events]: [39m eta: 3 days, 15:33:33  iter: 1579  total_loss: 6.471  loss_sem_seg: 3.571  loss_center: 2.803  loss_offset: 0.05817    time: 1.5794  last_time: 1.6185  data_time: 0.2682  last_data_time: 0.3594   lr: 0.00049645  max_mem: 8671M
[32m[08/12 17:48:21 d2.utils.events]: [39m eta: 3 days, 15:44:44  iter: 1599  total_loss: 6.566  loss_sem_seg: 3.654  loss_center: 2.889  loss_offset: 0.05709    time: 1.5803  last_time: 1.6459  data_time: 0.2906  last_data_time: 0.3007   lr: 0.0004964  max_mem: 8671M
[32m[08/12 17:48:53 d2.utils.events]: [39m eta: 3 days, 15:49:59  iter: 1619  total_loss: 6.311  loss_sem_seg: 3.398  loss_center: 2.749  loss_offset: 0.05572    time: 1.5805  last_time: 1.6147  data_time: 0.2824  last_data_time: 0.2697   lr: 0.00049636  max_mem: 8671M
[32m[08/12 17:49:24 d2.utils.events]: [39m eta: 3 days, 15:56:20  iter: 1639  total_loss: 6.813  loss_sem_seg: 3.653  loss_center: 2.861  loss_offset: 0.05555    time: 1.5805  last_time: 1.5612  data_time: 0.2750  last_data_time: 0.2915   lr: 0.00049631  max_mem: 8671M
[32m[08/12 17:49:57 d2.utils.events]: [39m eta: 3 days, 16:04:05  iter: 1659  total_loss: 6.523  loss_sem_seg: 3.772  loss_center: 2.828  loss_offset: 0.05997    time: 1.5810  last_time: 1.5733  data_time: 0.2903  last_data_time: 0.2236   lr: 0.00049627  max_mem: 8671M
[32m[08/12 17:50:29 d2.utils.events]: [39m eta: 3 days, 16:05:46  iter: 1679  total_loss: 6.335  loss_sem_seg: 3.399  loss_center: 2.927  loss_offset: 0.05408    time: 1.5815  last_time: 1.5370  data_time: 0.3018  last_data_time: 0.3076   lr: 0.00049622  max_mem: 8671M
[32m[08/12 17:51:01 d2.utils.events]: [39m eta: 3 days, 16:00:10  iter: 1699  total_loss: 6.326  loss_sem_seg: 3.511  loss_center: 2.817  loss_offset: 0.05574    time: 1.5814  last_time: 1.5264  data_time: 0.2689  last_data_time: 0.2549   lr: 0.00049618  max_mem: 8671M
[32m[08/12 17:51:33 d2.utils.events]: [39m eta: 3 days, 16:04:29  iter: 1719  total_loss: 6.165  loss_sem_seg: 3.387  loss_center: 2.489  loss_offset: 0.05244    time: 1.5816  last_time: 1.5539  data_time: 0.2671  last_data_time: 0.2508   lr: 0.00049613  max_mem: 8671M
[32m[08/12 17:52:05 d2.utils.events]: [39m eta: 3 days, 16:04:32  iter: 1739  total_loss: 6.111  loss_sem_seg: 3.443  loss_center: 2.595  loss_offset: 0.0492    time: 1.5821  last_time: 1.7670  data_time: 0.2836  last_data_time: 0.3331   lr: 0.00049609  max_mem: 8671M
[32m[08/12 17:52:38 d2.utils.events]: [39m eta: 3 days, 16:04:00  iter: 1759  total_loss: 6.155  loss_sem_seg: 3.304  loss_center: 2.68  loss_offset: 0.05114    time: 1.5828  last_time: 1.5256  data_time: 0.2967  last_data_time: 0.2341   lr: 0.00049604  max_mem: 8671M
[32m[08/12 17:53:10 d2.utils.events]: [39m eta: 3 days, 16:03:06  iter: 1779  total_loss: 5.914  loss_sem_seg: 3.417  loss_center: 2.496  loss_offset: 0.05155    time: 1.5829  last_time: 1.6165  data_time: 0.2734  last_data_time: 0.2283   lr: 0.000496  max_mem: 8671M
[32m[08/12 17:53:42 d2.utils.events]: [39m eta: 3 days, 16:05:26  iter: 1799  total_loss: 6.033  loss_sem_seg: 3.57  loss_center: 2.455  loss_offset: 0.05165    time: 1.5833  last_time: 1.7460  data_time: 0.2978  last_data_time: 0.5118   lr: 0.00049595  max_mem: 8671M
[32m[08/12 17:54:15 d2.utils.events]: [39m eta: 3 days, 16:08:11  iter: 1819  total_loss: 5.786  loss_sem_seg: 3.325  loss_center: 2.601  loss_offset: 0.0517    time: 1.5840  last_time: 1.5255  data_time: 0.2828  last_data_time: 0.2762   lr: 0.00049591  max_mem: 8671M
[32m[08/12 17:54:47 d2.utils.events]: [39m eta: 3 days, 16:04:22  iter: 1839  total_loss: 6.172  loss_sem_seg: 3.519  loss_center: 2.445  loss_offset: 0.05445    time: 1.5840  last_time: 1.6112  data_time: 0.2740  last_data_time: 0.3167   lr: 0.00049586  max_mem: 8671M
[32m[08/12 17:55:19 d2.utils.events]: [39m eta: 3 days, 16:03:50  iter: 1859  total_loss: 6.146  loss_sem_seg: 3.49  loss_center: 2.567  loss_offset: 0.051    time: 1.5840  last_time: 1.5201  data_time: 0.2690  last_data_time: 0.3079   lr: 0.00049582  max_mem: 8671M
[32m[08/12 17:55:52 d2.utils.events]: [39m eta: 3 days, 16:01:22  iter: 1879  total_loss: 5.948  loss_sem_seg: 3.303  loss_center: 2.565  loss_offset: 0.04919    time: 1.5845  last_time: 1.7182  data_time: 0.2975  last_data_time: 0.3262   lr: 0.00049577  max_mem: 8671M
[32m[08/12 17:56:23 d2.utils.events]: [39m eta: 3 days, 15:54:59  iter: 1899  total_loss: 6.304  loss_sem_seg: 3.307  loss_center: 2.776  loss_offset: 0.05059    time: 1.5846  last_time: 1.5925  data_time: 0.2669  last_data_time: 0.2719   lr: 0.00049573  max_mem: 8671M
[32m[08/12 17:56:56 d2.utils.events]: [39m eta: 3 days, 16:00:18  iter: 1919  total_loss: 6.13  loss_sem_seg: 3.408  loss_center: 2.641  loss_offset: 0.05084    time: 1.5849  last_time: 1.5364  data_time: 0.2734  last_data_time: 0.2477   lr: 0.00049568  max_mem: 8671M
[32m[08/12 17:57:28 d2.utils.events]: [39m eta: 3 days, 15:59:12  iter: 1939  total_loss: 5.764  loss_sem_seg: 3.298  loss_center: 2.466  loss_offset: 0.04948    time: 1.5852  last_time: 1.9212  data_time: 0.2952  last_data_time: 0.5589   lr: 0.00049564  max_mem: 8671M
[32m[08/12 17:58:01 d2.utils.events]: [39m eta: 3 days, 15:58:18  iter: 1959  total_loss: 5.891  loss_sem_seg: 3.323  loss_center: 2.561  loss_offset: 0.05159    time: 1.5857  last_time: 1.7185  data_time: 0.3143  last_data_time: 0.3801   lr: 0.00049559  max_mem: 8671M
[32m[08/12 17:58:34 d2.utils.events]: [39m eta: 3 days, 15:58:42  iter: 1979  total_loss: 5.796  loss_sem_seg: 3.359  loss_center: 2.482  loss_offset: 0.05179    time: 1.5865  last_time: 1.6607  data_time: 0.3035  last_data_time: 0.3036   lr: 0.00049555  max_mem: 8671M
[32m[08/12 17:59:05 d2.utils.events]: [39m eta: 3 days, 16:00:06  iter: 1999  total_loss: 5.659  loss_sem_seg: 3.19  loss_center: 2.449  loss_offset: 0.05331    time: 1.5863  last_time: 1.7114  data_time: 0.2663  last_data_time: 0.3058   lr: 0.0004955  max_mem: 8671M
[32m[08/12 17:59:38 d2.utils.events]: [39m eta: 3 days, 16:02:24  iter: 2019  total_loss: 5.805  loss_sem_seg: 3.374  loss_center: 2.434  loss_offset: 0.05205    time: 1.5869  last_time: 1.5869  data_time: 0.3046  last_data_time: 0.2658   lr: 0.00049545  max_mem: 8671M
[32m[08/12 18:00:11 d2.utils.events]: [39m eta: 3 days, 16:03:30  iter: 2039  total_loss: 5.482  loss_sem_seg: 3.045  loss_center: 2.431  loss_offset: 0.04895    time: 1.5875  last_time: 1.6374  data_time: 0.2925  last_data_time: 0.3127   lr: 0.00049541  max_mem: 8671M
[32m[08/12 18:00:42 d2.utils.events]: [39m eta: 3 days, 16:01:47  iter: 2059  total_loss: 5.801  loss_sem_seg: 3.151  loss_center: 2.597  loss_offset: 0.04952    time: 1.5871  last_time: 1.5189  data_time: 0.2598  last_data_time: 0.2852   lr: 0.00049536  max_mem: 8671M
[32m[08/12 18:01:15 d2.utils.events]: [39m eta: 3 days, 16:03:01  iter: 2079  total_loss: 5.654  loss_sem_seg: 3.101  loss_center: 2.418  loss_offset: 0.05254    time: 1.5879  last_time: 1.5416  data_time: 0.2867  last_data_time: 0.2701   lr: 0.00049532  max_mem: 8671M
[32m[08/12 18:01:47 d2.utils.events]: [39m eta: 3 days, 16:00:43  iter: 2099  total_loss: 5.2  loss_sem_seg: 2.964  loss_center: 2.159  loss_offset: 0.04712    time: 1.5877  last_time: 1.6593  data_time: 0.2678  last_data_time: 0.2742   lr: 0.00049527  max_mem: 8671M
[32m[08/12 18:02:20 d2.utils.events]: [39m eta: 3 days, 16:01:22  iter: 2119  total_loss: 5.524  loss_sem_seg: 3.008  loss_center: 2.463  loss_offset: 0.04891    time: 1.5882  last_time: 1.6359  data_time: 0.2903  last_data_time: 0.3286   lr: 0.00049523  max_mem: 8671M
[32m[08/12 18:02:51 d2.utils.events]: [39m eta: 3 days, 16:00:19  iter: 2139  total_loss: 5.674  loss_sem_seg: 3.098  loss_center: 2.559  loss_offset: 0.05332    time: 1.5882  last_time: 1.6096  data_time: 0.2735  last_data_time: 0.2446   lr: 0.00049518  max_mem: 8671M
[32m[08/12 18:03:24 d2.utils.events]: [39m eta: 3 days, 15:59:07  iter: 2159  total_loss: 5.346  loss_sem_seg: 3.018  loss_center: 2.287  loss_offset: 0.0465    time: 1.5886  last_time: 1.5296  data_time: 0.3171  last_data_time: 0.2032   lr: 0.00049514  max_mem: 8671M
[32m[08/12 18:03:56 d2.utils.events]: [39m eta: 3 days, 16:00:39  iter: 2179  total_loss: 5.343  loss_sem_seg: 2.936  loss_center: 2.274  loss_offset: 0.04886    time: 1.5889  last_time: 1.6225  data_time: 0.2764  last_data_time: 0.2930   lr: 0.00049509  max_mem: 8671M
